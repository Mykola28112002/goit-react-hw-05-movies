{"version":3,"file":"static/js/680.7fa460b5.chunk.js","mappings":"4TAGAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAO,mCAEAC,EAAc,mCAAG,6GAEDF,IAAAA,IAAA,uCAA0CC,IAFzC,cAElBE,EAFkB,yBAGjBA,EAASC,MAHQ,gCAMxBC,QAAQC,IAAR,MANwB,yDAAH,qDAWdC,EAAiB,mCAAG,WAAMC,GAAN,gGAEJR,IAAAA,IAAA,gCAAmCC,EAAnC,iCAAgEO,EAAhE,yBAFI,cAErBL,EAFqB,yBAGpBA,EAASC,MAHW,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDAUjBG,EAAe,mCAAG,WAAMC,GAAN,gGAEFV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,EAAvC,oBAFE,cAEnBE,EAFmB,yBAGlBA,EAASC,MAHS,gCAMzBC,QAAQC,IAAR,MANyB,yDAAH,sDAUfK,EAAY,mCAAE,WAAMD,GAAN,gGAEEV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,oBAFF,cAEfE,EAFe,yBAGdA,EAASC,MAHK,gCAMrBC,QAAQC,IAAR,MANqB,yDAAF,sDAUZM,EAAe,mCAAG,WAAMF,GAAN,gGAEFV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,oBAFE,cAEnBE,EAFmB,yBAGlBA,EAASC,MAHS,gCAMzBC,QAAQC,IAAR,MANyB,yDAAH,qD,2GC5CfO,EAAKC,EAAAA,GAAAA,GAAH,iFACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,cAAnB,IACG,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACL,SAAAJ,GAAC,OAAuB,EAAnBA,EAAEC,MAAMG,MAAM,EAAlB,IAGCC,GAAIN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,8IACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,cAAnB,IACG,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IAQHG,EAAKR,EAAAA,GAAAA,GAAH,mMAMF,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACL,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,I,GAISL,EAAAA,GAAAA,IAAH,yGAID,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IAEGL,EAAAA,GAAAA,IAAH,0D,QCVhB,EApBa,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OACRC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACH,EAAD,UACGC,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,GAAIC,EAApB,EAAoBA,MAApB,OACV,SAAChB,EAAD,WACE,UAACO,EAAD,CAAGU,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAAvC,WACE,gBACES,IAAG,yCAAoCN,GACvCO,IAAKL,KAEP,wBAAKA,QANAD,EADC,KAajB,C,8GCKD,UAzBiB,WACf,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEuBnC,EAAAA,EAAAA,MAFvB,cAEUE,EAFV,OAGUkC,EAAgBlC,EAAKmC,QAC3BH,EAAUE,GAJd,mDAOIjC,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAYdkC,EACD,GAAE,KAGD,0BACE,SAAC,IAAD,CAAMjB,OAAQA,KAGnB,C","sources":["apiFilm.js","components/Home/Home.styled.js","components/Home/Home.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst _KEY = '7b3113adaaaddb4bcf92789694ac9d41';\n\nexport const getTrendMovies = async() => {\n  try {\n      const response = await axios.get(`/trending/movie/week?api_key=${_KEY}`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\n\nexport const getSearchedMovies = async(query) => {\n  try {\n      const response = await axios.get(`/search/movie?api_key=${_KEY}&language=en-US&query=${query}&include_adult=false`);       \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\nexport const getMovieDetails = async(movieId) => {\n  try {\n      const response = await axios.get(`/movie/${movieId}?api_key=${_KEY}&language=en-US`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\nexport const getMovieCast= async(movieId) => {\n  try {\n      const response = await axios.get(`/movie/${movieId}/credits?api_key=${_KEY}&language=en-US`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\nexport const getMovieRewiews = async(movieId) => {\n  try {\n      const response = await axios.get(`/movie/${movieId}/reviews?api_key=${_KEY}&language=en-US`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Li = styled.li`\n  color: ${p => p.theme.colors.mainBackground};\n  font-size: ${p => p.theme.space[4]}px;\n  width: ${p => p.theme.space[6] * 6}px;\n  \n`;\nexport const A = styled(NavLink)`\n  color: ${p => p.theme.colors.mainBackground};\n  font-size: ${p => p.theme.space[4]}px;\n  display: flex;\n  flex-direction: column;\n  &.active {\n    color: gold;\n  }\n`;\n\nexport const Ul = styled.ul`\n  display: inline-flex;\n  flex-wrap: wrap;\n  margin-top: 0;\n  margin-bottom: 0;\n  justify-content: center;\n  padding: ${p => p.theme.space[4]}px;\n  gap: ${p => p.theme.space[4]}px;\n  list-style: none;\n  \n`;\nexport const Div = styled.div`\n  width: 95%;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 ${p => p.theme.space[4]}px;\n`;\nexport const Img = styled.img`\n  width: 300px;\n  height: 100%;\n`;","\n\nimport { PropTypes } from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Li,A,Ul } from \"./Home.styled\";\n\nconst Home = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <Ul>\n      {movies.map(({ poster_path, id, title }) => (\n        <Li key={id}>\n          <A to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            />\n            <h2>{title}</h2>\n          </A>\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};","import Home from '../../components/Home/Home';\nimport { useState, useEffect } from 'react';\nimport { getTrendMovies } from '../../apiFilm';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        const data = await getTrendMovies();\n        const trendieMovies = data.results;\n        setMovies(trendieMovies);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getMovies();\n  }, []);\n\n  return (\n    <div>\n      <Home movies={movies} />\n    </div>\n  );\n};\n\nexport default HomePage;"],"names":["axios","_KEY","getTrendMovies","response","data","console","log","getSearchedMovies","query","getMovieDetails","movieId","getMovieCast","getMovieRewiews","Li","styled","p","theme","colors","mainBackground","space","A","NavLink","Ul","movies","location","useLocation","map","poster_path","id","title","to","state","from","src","alt","useState","setMovies","useEffect","trendieMovies","results","getMovies"],"sourceRoot":""}
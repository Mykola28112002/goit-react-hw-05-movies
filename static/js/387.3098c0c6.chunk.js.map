{"version":3,"file":"static/js/387.3098c0c6.chunk.js","mappings":"yPAEaA,EAAKC,EAAAA,GAAAA,GAAH,oLAON,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACG,SAAAF,GAAC,OAAuB,EAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IAIDC,EAAMJ,EAAAA,GAAAA,IAAH,yDAKHK,EAAQL,EAAAA,GAAAA,GAAH,0CAILM,EAAKN,EAAAA,GAAAA,GAAH,oNACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,cAAnB,IACG,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACL,SAAAF,GAAC,OAAuB,EAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IACQ,SAAAF,GAAC,OAAuB,EAAnBA,EAAEC,MAAMC,MAAM,EAAlB,I,sCCWrB,EA7Ba,WACX,IAAQM,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEuBC,EAAAA,EAAAA,IAAaN,GAFpC,cAEUO,EAFV,OAGUC,EAASD,EAAKJ,KACpBC,EAAQI,GAJZ,mDAOIC,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACX,KAGF,SAACV,EAAD,eACmBsB,IAAhBT,EAAKU,QAAwBV,EAAKW,KAAI,gBAAEd,EAAF,EAAEA,GAAGe,EAAL,EAAKA,KAAKC,EAAV,EAAUA,aAAV,OACrC,UAACnB,EAAD,YACE,SAACF,EAAD,CAAKsB,IAAG,yCAAoCD,GAAgBE,IAAI,MAChE,SAACtB,EAAD,UAAQmB,MAFDf,EAD4B,KAO5C,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 0;\n  margin-bottom: 0;\n  justify-content: center;\n  padding: 0;\n  gap: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3] * 6}px;\n\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Title = styled.h3`\n  margin:  10px;\n`;\n\nexport const Li = styled.li`\n  color: ${p => p.theme.colors.mainBackground};\n  font-size: ${p => p.theme.space[4]}px;\n  width: ${p => p.theme.space[6] * 6}px;\n  padding-bottom: ${p => p.theme.space[3] * 6}px;\n  list-style: none;\n  border: 1px solid #000;\n  min-height: 622px;\n  &.active {\n    color: orange;\n  }\n`;","// /movies/get-movie-credits\n\nimport { Ul,Img,Li,Title } from \"./Cast.styled\";\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../../apiFilm';\nimport { useState, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\n\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState({});\n\n  useEffect(() => {\n    async function getFilm() {\n      try {\n        const film = await getMovieCast(id);\n        const acting = film.cast\n        setCast(acting);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFilm();\n  }, [id]);\n  \n  return (\n    <Ul>\n      {cast.length !== undefined && cast.map(({id,name,profile_path}) =>\n        <Li key={id}>\n          <Img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt=\"\" />\n          <Title>{name}</Title>\n        </Li>)}\n    </Ul>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  id: PropTypes.string,\n  profile_path: PropTypes.string,\n  name: PropTypes.string,\n\n};"],"names":["Ul","styled","p","theme","space","Img","Title","Li","colors","mainBackground","id","useParams","useState","cast","setCast","useEffect","getMovieCast","film","acting","console","log","getFilm","undefined","length","map","name","profile_path","src","alt"],"sourceRoot":""}
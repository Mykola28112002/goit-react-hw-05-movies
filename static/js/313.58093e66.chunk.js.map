{"version":3,"file":"static/js/313.58093e66.chunk.js","mappings":"2NAGaA,EAAKC,EAAAA,GAAAA,GAAH,iFACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,cAAnB,IACG,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACL,SAAAJ,GAAC,OAAuB,EAAnBA,EAAEC,MAAMG,MAAM,EAAlB,IAGCC,GAAIN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,8IACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,cAAnB,IACG,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IAQHG,EAAKR,EAAAA,GAAAA,GAAH,mMAMF,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACL,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,I,GAISL,EAAAA,GAAAA,IAAH,yGAID,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IAEGL,EAAAA,GAAAA,IAAH,0D,QCVhB,EApBa,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OACRC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACH,EAAD,UACGC,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,GAAIC,EAApB,EAAoBA,MAApB,OACV,SAAChB,EAAD,WACE,UAACO,EAAD,CAAGU,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAAvC,WACE,gBACES,IAAG,yCAAoCN,GACvCO,IAAKL,KAEP,wBAAKA,QANAD,EADC,KAajB,C,6JCrBYO,EAASrB,EAAAA,GAAAA,OAAH,4bAmBNsB,GAAatB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAH,8KAUVwB,GAAcxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,CAAH,0PAcX0B,EAAS1B,EAAAA,GAAAA,OAAH,yK,uCCuBnB,MA3DA,WAAmB,IAAD,EAEhB,GAAwC2B,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOrB,EAAP,KAAesB,EAAf,KACMC,EAAY,UAAGJ,EAAaK,IAAI,iBAApB,QAAiC,GA4BnD,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAAqB,KAAjBF,EAAqB,CAAC,IACTG,EADQ,mCACvB,gHAEqBC,EAAAA,EAAAA,IAAkBJ,GAFvC,cAEQK,EAFR,OAGQC,EAAgBD,EAAKE,QAC3BR,EAAUO,GAJZ,mDAOEE,MAAM,aACNC,QAAQC,IAAR,MARF,yDADuB,qDAYzBP,GACC,CACF,GAAC,CAACH,KAGK,4BACJ,SAACX,EAAD,WACE,SAAC,KAAD,CACIsB,cAAe,CAACC,KAlCb,IAmCHC,SA7BW,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBC,EAAQF,EAAOF,KACP,KAAVI,IACAnB,EAAgB,CAAEoB,OAAQD,IAC1BD,IAEL,EAqBK,UAGI,UAACzB,EAAD,CAAY4B,UAAU,OAAtB,WACI,SAACxB,EAAD,CAAQyB,KAAK,SAAb,UACI,gBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAChEC,QAAQ,YADZ,UAEI,iBACAC,EAAE,mMAGV,SAACjC,EAAD,CACI0B,UAAU,QACVC,KAAK,OACLP,KAAK,OACLc,YAAY,oCAKhB,KAAXjD,IAAiB,SAACkD,EAAA,EAAD,CAAMlD,OAAQA,MAGnC,C","sources":["components/Home/Home.styled.js","components/Home/Home.jsx","components/Movies/Movies.styled.js","components/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Li = styled.li`\n  color: ${p => p.theme.colors.mainBackground};\n  font-size: ${p => p.theme.space[4]}px;\n  width: ${p => p.theme.space[6] * 6}px;\n  \n`;\nexport const A = styled(NavLink)`\n  color: ${p => p.theme.colors.mainBackground};\n  font-size: ${p => p.theme.space[4]}px;\n  display: flex;\n  flex-direction: column;\n  &.active {\n    color: gold;\n  }\n`;\n\nexport const Ul = styled.ul`\n  display: inline-flex;\n  flex-wrap: wrap;\n  margin-top: 0;\n  margin-bottom: 0;\n  justify-content: center;\n  padding: ${p => p.theme.space[4]}px;\n  gap: ${p => p.theme.space[4]}px;\n  list-style: none;\n  \n`;\nexport const Div = styled.div`\n  width: 95%;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 ${p => p.theme.space[4]}px;\n`;\nexport const Img = styled.img`\n  width: 300px;\n  height: 100%;\n`;","\n\nimport { PropTypes } from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Li,A,Ul } from \"./Home.styled\";\n\nconst Home = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <Ul>\n      {movies.map(({ poster_path, id, title }) => (\n        <Li key={id}>\n          <A to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            />\n            <h2>{title}</h2>\n          </A>\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Search = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: gold;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n  0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`\n\nexport const SearchField = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n`\n","\nimport { getSearchedMovies } from '../../apiFilm';\nimport { Formik, } from 'formik';\nimport { Search,SearchForm,SearchField,Button } from './Movies.styled';\nimport { useState, useEffect } from \"react\";\nimport Home from '../Home/Home';\nimport { useSearchParams } from \"react-router-dom\";\n\n\n\nfunction Movies() {\n  const name = '';\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState('');\n  const filterParams = searchParams.get('filter') ?? '';\n  \n  \n  const handelSabmit = (values, { resetForm }) => { \n    const value = values.name \n    if (value !== '') { \n        setSearchParams({ filter: value})\n        resetForm();\n      }\n  };\n  useEffect(() => {\n    if (filterParams !== '') {\n      async function getMovies() {\n      try {\n        const data = await getSearchedMovies(filterParams);\n        const trendieMovies = data.results;\n        setMovies(trendieMovies);\n        return;\n      } catch (error) {\n        alert('Not found')\n        console.log(error);\n      }\n    }\n    getMovies();\n    }\n  },[filterParams]);\n   \n  \n  return (<div>\n      <Search>\n        <Formik\n            initialValues={{name}}\n            onSubmit={handelSabmit}>\n            <SearchForm className=\"form\" >\n                <Button type=\"submit\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" \n                        viewBox=\"0 0 16 16\">\n                        <path\n                        d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n                    </svg>\n                </Button>\n                <SearchField\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Search images and photos\"\n                />\n            </SearchForm>\n      </Formik>\n    </Search>\n    {movies !== '' && <Home movies={movies} />}\n    </div>)\n    \n};\n\nexport default Movies;\n"],"names":["Li","styled","p","theme","colors","mainBackground","space","A","NavLink","Ul","movies","location","useLocation","map","poster_path","id","title","to","state","from","src","alt","Search","SearchForm","Form","SearchField","Field","Button","useSearchParams","searchParams","setSearchParams","useState","setMovies","filterParams","get","useEffect","getMovies","getSearchedMovies","data","trendieMovies","results","alert","console","log","initialValues","name","onSubmit","values","resetForm","value","filter","className","type","xmlns","width","height","fill","viewBox","d","placeholder","Home"],"sourceRoot":""}